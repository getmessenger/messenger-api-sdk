import e from"axios";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},t.apply(this,arguments)}class s{constructor(e){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=e.apiKey,this.baseUrl=e.baseUrl||"https://api-prod.getmessenger.ng"}request(s,r,a,n){const o=t({method:r,url:`${this.baseUrl}${s}`,headers:{"Content-Type":"application/json","api-key":this.apiKey}},n,{data:a?JSON.stringify(a):void 0});return e(o).then(e=>{if(e.status>=200&&e.status<300)return e.data;throw new Error(e.statusText)}).catch(e=>{throw e.response?new Error(`Status: ${e.response.status}, ${e.response.statusText}`):e.request?new Error("No response received."):new Error("Check your network connection and try again.")})}}class r extends s{}var a;a=r,[class extends s{constructor(e,t){super({apiKey:"",baseUrl:"https://api-prod.getmessenger.ng"}),this.publicKey=void 0,this.privateKey=void 0,this.accessToken=void 0,this.publicKey=e,this.privateKey=t,this.accessToken=null}async generateBearerToken(){if(this.accessToken)return this.accessToken;{const e={username:this.publicKey,password:this.privateKey};try{const t=await this.authenticate(e);if(t&&t.headers&&t.headers["access-token"])return this.accessToken=t.headers["access-token"],this.accessToken;throw new Error("Access token not found in the response headers.")}catch(e){return console.error(`Authentication failed: ${e.message}`),null}}}async authenticate(e){return this.request("auth/login","POST",{data:e})}}].forEach(e=>{Object.getOwnPropertyNames(e.prototype).forEach(t=>{Object.defineProperty(a.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t)||Object.create(null))})});export{r as default};
