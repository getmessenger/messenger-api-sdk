function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t,n=/*#__PURE__*/e(require("axios"));function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}function s(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}!function(e){e.PROD="https://api-prod.getmessenger.ng",e.STAGING="https://api-staging.getmessenger.ng"}(t||(t={})),module.exports=/*#__PURE__*/function(e){var t,n;function r(){return e.apply(this,arguments)||this}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,o(t,n),r}(/*#__PURE__*/function(){function e(e,r,o){var s=this;if(this.baseURL=void 0,this.publicKey=void 0,this.privateKey=void 0,this.axiosInstance=void 0,this.environment=t.PROD,this.baseAuthUrl=void 0,this.accessToken=null,this.authenticationData=null,this.baseAuthUrl="/auth",!e||!r)throw new Error("Public or Private keys are required!");this.environment||console.warn("No environment specified. Defaulting to development."),this.environment=o||"development",this.baseURL="test"===this.environment||"development"===this.environment?t.STAGING:t.PROD,this.publicKey=e,this.privateKey=r,this.axiosInstance=n.default.create({baseURL:this.baseURL,headers:{"Content-Type":"application/json"}}),this.axiosInstance.interceptors.response.use(function(e){return e},function(e){try{return e.response&&401===e.response.status?(s.login(),Promise.resolve(n.default(e.config))):Promise.reject(e)}catch(e){return Promise.reject(e)}})}var o=e.prototype;return o.login=function(){try{var e=this;if(!e.publicKey||!e.privateKey)throw new Error("Public or Private keys are required!");e.environment||console.warn("No environment specified. Defaulting to development.");var t=Buffer.from(e.publicKey+":"+e.privateKey).toString("base64");return Promise.resolve(s(function(){return Promise.resolve(e.axiosInstance.post(e.baseAuthUrl+"/login",{},{headers:{Authorization:"Basic "+t},auth:{username:e.publicKey,password:e.privateKey}})).then(function(t){return e.accessToken=t.headers["access-token"],t.data})},function(e){var t;return console.warn(null==e||null==(t=e.response)||null==(t=t.data)?void 0:t.message),e.response.data}))}catch(e){return Promise.reject(e)}},o.makeApiRequest=function(e){try{var t=this;return Promise.resolve(s(function(){if(!t.accessToken)throw new Error("Access token is missing or invalid.");return e.headers=r({},e.headers,{Authorization:"Bearer "+t.accessToken}),Promise.resolve(t.axiosInstance(e)).then(function(e){return e.data})},function(r){var o;function s(e){if(o)return e;throw console.error("Unknown error:",r),r}var i=function(){if(n.default.isAxiosError(r)){var s=function(e){var t;if(o)return e;throw console.error("API request failed:",null==i||null==(t=i.response)?void 0:t.data),i},i=r,a=function(){if(i.response&&401===i.response.status)return console.error("Received 401. Attempting to refresh access token..."),Promise.resolve(t.login()).then(function(){console.log(t.login()),console.log("Access token successfully refreshed. Retrying the request.");var n=t.makeApiRequest(e);return o=1,n})}();return a&&a.then?a.then(s):s(a)}}();return i&&i.then?i.then(s):s(i)}))}catch(e){return Promise.reject(e)}},o.getAccessToken=function(){return this.accessToken?this.accessToken:null},e}());
